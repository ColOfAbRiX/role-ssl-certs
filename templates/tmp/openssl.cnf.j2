{% macro write_attribute(attribute) -%}
{%- if attribute in certificate and certificate[attribute] != '' -%}{{ attribute.ljust(23) }} = {{ certificate[attribute] }}{%- endif -%}
{%- endmacro -%}
{% set alt_names_dns = certificate.alt_names_dns | default([]) %}
{% set alt_names_ips = certificate.alt_names_ips | default([]) %}
# {{ ansible_managed }}

# PKCS#10 certificate request and certificate generating section.
[ req ]
default_bits            = 2048
distinguished_name      = req_distinguished_name
x509_extensions         = v3_ca
req_extensions          = v3_req
prompt                  = no

# The section containing the distinguished name fields to prompt for when
# generating a certificate or certificate request.
[ req_distinguished_name ]
C                       = {{ cert_subj_country }}
ST                      = {{ cert_subj_state }}
L                       = {{ cert_subj_location }}
O                       = {{ cert_subj_org }}
OU                      = {{ cert_subj_org_unit }}
CN                      = {{ certificate.common_name }}
emailAddress            = {{ cert_subj_email }}

# The configuration file section containing a list of extensions to add to
# certificate generated when the -x509 switch is used.
[ v3_ca ]
{{ write_attribute('basicConstraints') }}
{{ write_attribute('subjectKeyIdentifier') }}
{{ write_attribute('authorityKeyIdentifier') }}
{{ write_attribute('keyUsage') }}
{% if alt_names_dns or alt_names_ips %}
subjectAltName          = @alt_names
{% endif %}

# The configuration file section containing a list of extensions to add to the
# certificate request.
[ v3_req ]
{{ write_attribute('basicConstraints') }}
{{ write_attribute('subjectKeyIdentifier') }}
{{ write_attribute('keyUsage') }}
{{ write_attribute('extendedKeyUsage') }}
{% if alt_names_dns or alt_names_ips %}
subjectAltName          = @alt_names
{% endif %}

{% if alt_names_dns or alt_names_ips %}
# Subject alternative name extension
[ alt_names ]
{% for dns_name in alt_names_dns %}
DNS.{{ loop.index }}                   = {{ dns_name }}
{% endfor %}
{% for ip_address in alt_names_ips %}
IP.{{ loop.index }}                    = {{ ip_address }}
{% endfor %}
{% endif %}
