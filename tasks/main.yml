---
# tasks file for ssl-certs

- name: "Require Correct Linux Distribution"
  assert:
    that: ansible_distribution | lower in ['redhat', 'centos', 'sles']
    msg:  "This Linux distrution is not supported by the role."
  tags: ssl-certs

- set_fact:
    ssl_keys_base:
      path:   "{{ ssl_base.path }}/{{ ssl_key_dir.name }}"
      owner:  "{{ ssl_key_dir.owner | default(omit) }}"
      group:  "{{ ssl_key_dir.group | default(omit) }}"
      mode:   "{{ ssl_key_dir.mode | default(omit) }}"
      seuser: "{{ ssl_key_dir.seuser | default(omit) }}"
      serole: "{{ ssl_key_dir.serole | default(omit) }}"
      setype: "{{ ssl_key_dir.setype | default(omit) }}"
    ssl_csr_base:
      path:   "{{ ssl_base.path }}/{{ ssl_csr_dir.name }}"
      owner:  "{{ ssl_csr_dir.owner | default(omit) }}"
      group:  "{{ ssl_csr_dir.group | default(omit) }}"
      mode:   "{{ ssl_csr_dir.mode | default(omit) }}"
      seuser: "{{ ssl_csr_dir.seuser | default(omit) }}"
      serole: "{{ ssl_csr_dir.serole | default(omit) }}"
      setype: "{{ ssl_csr_dir.setype | default(omit) }}"
    ssl_certs_base:
      path:   "{{ ssl_base.path }}/{{ ssl_crt_dir.name }}"
      owner:  "{{ ssl_crt_dir.owner | default(omit) }}"
      group:  "{{ ssl_crt_dir.group | default(omit) }}"
      mode:   "{{ ssl_crt_dir.mode | default(omit) }}"
      seuser: "{{ ssl_crt_dir.seuser | default(omit) }}"
      serole: "{{ ssl_crt_dir.serole | default(omit) }}"
      setype: "{{ ssl_crt_dir.setype | default(omit) }}"
    ssl_store_keys_base:  "{{ ssl_store_base }}/{{ ssl_key_dir.name }}"
    ssl_store_csr_base:   "{{ ssl_store_base }}/{{ ssl_csr_dir.name }}"
    ssl_store_certs_base: "{{ ssl_store_base }}/{{ ssl_crt_dir.name }}"
  tags: ssl-certs

- name: "Create Directories"
  file:
    path:   "{{ item.path }}"
    state:  directory
    force:  yes
    mode:   "{{ item.mode | default(omit) }}"
    owner:  "{{ item.owner | default(omit) }}"
    group:  "{{ item.group | default(omit) }}"
    seuser: "{{ item.seuser | default(omit) }}"
    serole: "{{ item.serole | default(omit) }}"
    setype: "{{ item.setype | default(omit) }}"
  with_items:
   - "{{ ssl_base }}"
   - "{{ ssl_keys_base }}"
   - "{{ ssl_csr_base }}"
   - "{{ ssl_certs_base }}"
  tags: ssl-certs

- include: "manage_entity.yml"
  with_items:
   - "{{ ssl_sequence }}"
  when: entity.enabled | default(True) | bool
  loop_control:
    loop_var: entity
  tags: ssl-certs
