---

- name: "Discover Certificates in Chain : {{ entity.name }}"
  set_fact:
    certs_files_in_chain: "{{ ssl_sequence | cert_files_in_chain(chain.certificates | default([]), ssl_base.path, ssl_chain_dir) | list }}"

- name: "Chain Options : {{ entity.name }}"
  set_fact:
    force_remote:         "{{ chain.force_remote | default(entity.force_remote | default(False)) | bool }}"
    force_create:         "{{ chain.force_create | default(entity.force_create | default(False)) | bool }}"

- name: "Create Remote Path : {{ entity.name }}"
  file:
    path:   "{{ chain_file | dirname }}"
    state:  directory
    owner:  "{{ ssl_chain_dir.owner | default(omit) }}"
    group:  "{{ ssl_chain_dir.group | default(omit) }}"
    mode:   "{{ ssl_chain_dir.mode | default(omit) }}"
    seuser: "{{ ssl_chain_dir.seuser | default(omit) }}"
    serole: "{{ ssl_chain_dir.serole | default(omit) }}"
    setype: "{{ ssl_chain_dir.setype | default(omit) }}"

- name: "Copy Local Chain to Target : {{ entity.name }}"
  copy:
    src:  "{{ local_chain_file }}"
    dest: "{{ chain_file }}"
  when: not force_remote
  register: chain_copied_from_local
  ignore_errors: yes

- name: "Force Creation of the Chain : {{ entity.name }}"
  file: path="{{ chain_file }}" state=absent
  when: force_create

- name: "Create Certificate Chain : {{ entity.name }}"
  shell: cat {{ certs_files_in_chain | join(' ') }} > "{{ chain_file }}"
  args:
    creates: "{{ chain_file }}"
  register: chain_creation

- name: "Chain File Permissions : {{ entity.name }}"
  file:
    path:   "{{ chain_file }}"
    owner:  "{{ entity.owner | default(chain.owner | default(omit)) }}"
    group:  "{{ entity.group | default(chain.group | default(omit)) }}"
    mode:   "{{ entity.mode | default(chain.mode | default('0644')) }}"
    seuser: "{{ entity.seuser | default(chain.seuser | default(omit)) }}"
    serole: "{{ entity.serole | default(chain.serole | default(omit)) }}"
    setype: "{{ entity.setype | default(chain.setype | default(omit)) }}"

- name: "Trust Chain : {{ entity.name }}"
  include: "3-trust.yml"
  vars:
    trust_file: "{{ chain_file }}"
  when: chain.trust | default(False) | bool

# If the chain has been copied from locally, then this will have no effect
- name: "Download Chain from Target : {{ entity.name }}"
  fetch:
    src:  "{{ chain_file }}"
    dest: "{{ local_chain_file }}"
    flat: yes
  when: chain.fetch | default(True) | bool and (
          chain_copied_from_local | failed or
          chain_creation | changed
        )
