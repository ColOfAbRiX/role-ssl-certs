---
# defaults file for ssl-certs

# Path on the Ansible server where to store certificate
ssl_store_base: ../storage/ssl_certificates

# Default working path on the target machine
ssl_base:
  path:   /tmp/ssl_certs
#  owner:  root
#  group:  root
#  mode:   '0755'
#  seuser: system_u
#  serole: object_r
#  setype: user_tmp_t

# Subdirectories to differentiate the objects. This will be also used to store
# the certificates locally
ssl_key_dir:
  name: key
  mode: '0500'
#  owner:  root
#  group:  root
#  seuser: system_u
#  serole: object_r
#  setype: user_tmp_t
ssl_csr_dir:
  name: csr
  mode: '0550'
#  owner:  root
#  group:  root
#  seuser: system_u
#  serole: object_r
#  setype: user_tmp_t
ssl_crt_dir:
  name: crt
  mode: '0755'
#  owner:  root
#  group:  root
#  seuser: system_u
#  serole: object_r
#  setype: user_tmp_t


# Default OpenSSL values
ssl_country:             GB
ssl_state:               London
ssl_location:            London
ssl_organization:        Example Company
ssl_organizational_unit: IT Operations
ssl_email:               admin@example.com

# Main SSL Sequence. Objects will be created following this sequence, one after
# the other.
ssl_sequence: []
# # Root CA
# - name:          root_ca
#   # This can be used to have the key definition but not using it
#   enabled:       yes
#   # Custom paths that override the default working path for this key only.
#   # If using custom paths, they must exist beforehand.
#   key_base:      /tmp/key
#   csr_base:      /tmp/csr
#   crt_base:      /tmp/crt
#   # Definition of the private key (more options shown below too)
#   key:
#     # Crypto system: rsa, dsa, ecds
#     type:                   rsa
#     # Length of they key, applies to RSA and DSA key types
#     bits:                   4096
#     # If using ECDSA, this is the name of the elliptic curve. The name can be
#     # found using: openssl ecparam -list_curves
#     #ec_curve:               secp521r1
#   # Definition of the certificate (more options shown below too)
#   certificate:
#     self_signed:            yes
#     common_name:            Root CA
#     organizational_unit:    Example Security Office
#     # Installs the certificate on the system trust store
#     trust:                  yes
#     # SSL v3 extensions. Default is to omit these values
#     basicConstraints:       'critical, CA:TRUE'
#     subjectKeyIdentifier:   'hash'
#     authorityKeyIdentifier: 'keyid:always, issuer:always'
#     keyUsage:               'critical, cRLSign, digitalSignature, keyCertSign'
#
# # Website signed certificate
# - name:          website
#   # It forces the creation of a new key and certificate on the machine
#   force_create:  yes
#   # It gives priority to the key that is stored remotely versus the one stored
#   # on the local repository
#   force_remote:  yes
#   # If set to false, no operation will be performed
#   enabled:       yes
#   # Definition of the private key
#   key:
#     bits:                   2048
#     # File modifiers, as per usual "file" Ansible module
#     owner:                  nginx
#     group:                  nginx
#     # If set to no the file will not be stored locally
#     fetch:                  no
#   # Definition of the certificate
#   certificate:
#     common_name:            "{{ ansible_fqdn }}"
#     alt_names_dns:          [ "internal.example.com" ]
#     # Reference the above CA certificate
#     signing_key:            root_ca
#     digest:                 sha1
#     days:                   90
#     owner:                  nginx
#     group:                  nginx
#     # SSL v3 extensions. Default is to omit these values
#     basicConstraints:       'CA:FALSE'
#     subjectKeyIdentifier:   'hash'
#     keyUsage:               'nonRepudiation, digitalSignature, keyEncipherment'
#     extendedKeyUsage:       'clientAuth'
#
# # Certificate chain
# - name:          website_chain
#   chain:
#     # File modifiers, as per usual "file" Ansible module
#     owner:                  nginx
#     group:                  nginx
#     # If set to no the file will not be stored locally
#     fetch:                  yes
#     # Installs the certificate on the system trust store
#     trust:                  yes
#     # List of the certificate names that form the chain. The names are the names
#     # used in the above certificates
#     certificates:
#      - root_ca
#      - website
#
