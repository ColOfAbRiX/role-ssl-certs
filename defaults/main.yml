---
# defaults file for ssl-certs

# Path on the Ansible server where to store certificate
ssl_store_base: ../storage/ssl_certificates

# Default working path on the target machine. It supports the fields of the
# ansible "file" module: owner, group, mode, ...
ssl_base:
  path:   /tmp/ssl_certs

# Subdirectories to differentiate the objects. This will be also used to store
# the certificates locally. They all support the fields of the ansible "file"
# module: owner, group, mode, ...
ssl_key_dir:
  name: key
  mode: '0700'
ssl_csr_dir:
  name: csr
  mode: '0750'
ssl_crt_dir:
  name: crt
  mode: '0755'

# Default OpenSSL values
ssl_country:             GB
ssl_state:               London
ssl_location:            London
ssl_organization:        Example Company
ssl_organizational_unit: IT Operations
ssl_email:               admin@example.com

# Main SSL Sequence. Objects will be created following this sequence, one after
# the other.
ssl_sequence: []
# #
# # The following is a working example of how to setup a Root CA (root_ca), a
# # certificate (website) and a certificate chain (website_chain) with the two
# # certificates.
# # Each entry shows how to use different parameters and options.
# #
# # Root CA
# - name:          root_ca
#   # Custom paths that override the default working path for this key only.
#   # If using custom paths, they must exist beforehand.
#   key_base:      /tmp/ssl_certs/key
#   csr_base:      /tmp/ssl_certs/csr
#   crt_base:      /tmp/ssl_certs/crt
#   # Definition of the private key (more options shown below too)
#   key:
#     # Crypto system: rsa, dsa, ecdsa
#     type:                ecdsa
#     # If using ECDSA, this is the name of the elliptic curve. The name can be
#     # found using: openssl ecparam -list_curves
#     ec_curve:            prime256v1
#     # If set to a cipher it encrypts the key. See openssl for the list of
#     # supported algorithms.
#     encryption:          aes256
#     # The passphrase to use to encrypt the key
#     passphrase:          Passw0rd
#   # Definition of the certificate (more options shown below too)
#   certificate:
#     # This indicates that the certificate is to be self-signed
#     self_signed:         yes
#     common_name:         My website root Certificate Authority
#     organizational_unit: Example Security Office
#     # Days of validity. Default is 30
#     days:                1000
#     # Installs the certificate on the system trust store
#     trust:               yes
#     # SSL v3 extensions. Default is to omit these values
#     authorityKeyIdentifier: 'keyid:always,issuer:always'
#     basicConstraints:    'critical,CA:TRUE,pathlen:0'
#     keyUsage:            'critical,cRLSign,digitalSignature,keyCertSign'
#     subjectKeyIdentifier: 'hash'
#
# # Website signed certificate
# - name:          website
#   # It forces the creation of a new key and certificate on the machine
#   force_create:  yes
#   # It gives priority to the key that is stored remotely versus the one stored
#   # on the local repository (it will overwrite the local one if it's already
#   # present remotely)
#   force_remote:  yes
#   # If set to false, no operation will be performed
#   enabled:       yes
#   # Definition of the private key
#   key:
#     # Crypto system: rsa, dsa, ecdsa
#     type:                rsa
#     # Length of they key, applies to RSA and DSA key types
#     bits:                2048
#     # File modifiers, as per usual "file" Ansible module
#     #owner:               nginx
#     #group:               nginx
#     # If set to no the file will not be stored locally
#     fetch:               no
#   # Definition of the certificate
#   certificate:
#     common_name:         "{{ ansible_fqdn }}"
#     # For alternative DNS names
#     alt_names_dns:       [ internal.example.com ]
#     # For alternative IP addresses
#     #alt_names_ips:       [ "{{ ansible_default_ipv4.address }}" ]
#     # Reference the name of the signing CA certificate
#     signing_key:         root_ca
#     # Digest algorithm, defaults to sha256
#     digest:              sha1
#     #owner:               nginx
#     #group:               nginx
#     # SSL v3 extensions. Default is to omit these values
#     basicConstraints:    'CA:FALSE'
#     subjectKeyIdentifier: 'hash'
#     keyUsage:            'nonRepudiation,digitalSignature,keyEncipherment'
#     extendedKeyUsage:    'clientAuth'
#
# # Certificate chain
# - name:          website_chain
#   chain:
#     # File modifiers, as per usual "file" Ansible module
#     #owner:               nginx
#     #group:               nginx
#     # If set to no the file will not be stored locally
#     fetch:               yes
#     # Installs the certificate on the system trust store
#     trust:               yes
#     # List of the certificate names that form the chain. The names are the
#     # names used in the above certificates. The output chain will contain the
#     # certificates in the order that they appear here.
#     certificates:
#      - website
#      - root_ca
